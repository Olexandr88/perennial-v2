import HRE from 'hardhat'
import { expect } from 'chai'
import { impersonateWithBalance } from '../../../../../common/testutil/impersonate'
import { increase, increaseTo, reset } from '../../../../../common/testutil/time'
import { ArbGasInfo, MarketFactory, ProxyAdmin, PythFactory, VaultFactory } from '../../../../types/generated'
import { SignerWithAddress } from '@nomiclabs/hardhat-ethers/signers'
import { smock } from '@defi-wonderland/smock'

const RunMigrationDeployScript = false

describe('Verify Arbitrum v2.1.1 Migration', () => {
  let timelockSigner: SignerWithAddress
  let pythFactory: PythFactory
  let marketFactory: MarketFactory
  let vaultFactory: VaultFactory
  let proxyAdmin: ProxyAdmin

  let oracleIDs: { id: string; oracle: string }[]

  const { deployments, ethers } = HRE
  const { fixture, get } = deployments

  beforeEach(async () => {
    await reset()

    if (RunMigrationDeployScript) {
      // Deploy migration
      await fixture('v2_1_1_Migration', { keepExistingDeployments: true })
    }

    timelockSigner = await impersonateWithBalance(
      (
        await get('TimelockController')
      ).address,
      ethers.utils.parseEther('10'),
    )
    pythFactory = (await ethers.getContractAt('PythFactory', (await get('PythFactory')).address)).connect(
      timelockSigner,
    )
    marketFactory = (await ethers.getContractAt('MarketFactory', (await get('MarketFactory')).address)).connect(
      timelockSigner,
    )
    vaultFactory = (await ethers.getContractAt('VaultFactory', (await get('VaultFactory')).address)).connect(
      timelockSigner,
    )
    proxyAdmin = (await ethers.getContractAt('ProxyAdmin', (await get('ProxyAdmin')).address)).connect(timelockSigner)

    await proxyAdmin.upgrade(marketFactory.address, (await get('MarketFactoryImpl')).address)
    await proxyAdmin.upgrade(pythFactory.address, (await get('PythFactoryImpl')).address)
    await proxyAdmin.upgrade(vaultFactory.address, (await get('VaultFactoryImpl')).address)

    const gasInfo = await smock.fake<ArbGasInfo>('ArbGasInfo', {
      address: '0x000000000000000000000000000000000000006C',
    })
    // Hardhat fork network does not support Arbitrum built-ins, so we need to fake this call for testing
    gasInfo.getL1BaseFeeEstimate.returns(0)

    const oracleFactory = await ethers.getContractAt('OracleFactory', (await get('OracleFactory')).address)
    oracleIDs = (await oracleFactory.queryFilter(oracleFactory.filters.OracleCreated())).map(e => ({
      id: e.args.id,
      oracle: e.args.oracle,
    }))
  })

  it('Migrates', async () => {
    expect(await proxyAdmin.getProxyImplementation(marketFactory.address)).to.equal(
      (await get('MarketFactoryImpl')).address,
    )
    expect(await proxyAdmin.getProxyImplementation(pythFactory.address)).to.equal(
      (await get('PythFactoryImpl')).address,
    )
    expect(await proxyAdmin.getProxyImplementation(vaultFactory.address)).to.equal(
      (await get('VaultFactoryImpl')).address,
    )

    const markets = (await marketFactory.queryFilter(marketFactory.filters['InstanceRegistered(address)']())).map(
      e => e.args.instance,
    )
    for (const market of markets) {
      const contract = await ethers.getContractAt('IMarket', market)
      expect(await contract.update(ethers.constants.AddressZero, 0, 0, 0, 0, false)).to.not.be.reverted
    }
  })

  it('Runs full request/fulfill flow', async () => {
    const perennialUser = await impersonateWithBalance(
      '0xF8b6010FD6ba8F3E52c943A1473B1b1459a73094',
      ethers.utils.parseEther('10'),
    ) // Vault

    await increaseTo(VAA_PUBLISH_TIME)

    const ethMarket = await ethers.getContractAt('IMarket', '0x90A664846960AaFA2c164605Aebb8e9Ac338f9a0')
    const oracle = await ethers.getContractAt('Oracle', await ethMarket.oracle())
    const oracleProvider = await ethers.getContractAt('IOracleProvider', (await oracle.oracles(2)).provider)
    const currentPosition = await ethMarket.positions(perennialUser.address)
    await pythFactory.commit([oracleIDs[0].id], VAA_PUBLISH_TIME - 4, ETH_VAA_UPDATE, { value: 1 })

    // Next version according to granularity
    const nextVersion = Math.ceil(VAA_PUBLISH_TIME / 10) * 10

    await expect(
      ethMarket.connect(perennialUser).update(perennialUser.address, currentPosition.maker.add(10), 0, 0, 0, false),
    )
      .to.emit(oracleProvider, 'OracleProviderVersionRequested')
      .withArgs(nextVersion)
    await increase(10)

    await expect(pythFactory.commit([oracleIDs[0].id], nextVersion, ETH_VAA_FULFILL, { value: 1 })).to.emit(
      oracleProvider,
      'OracleProviderVersionFulfilled',
    )
  })

  it('liquidates', async () => {
    const [, liquidator] = await ethers.getSigners()
    const perennialUser = await impersonateWithBalance(
      '0x2EE6C29A4f28C13C22aC0D0B077Dcb2D4e2826B8',
      ethers.utils.parseEther('10'),
    )

    const ethMarket = await ethers.getContractAt('IMarket', '0x90A664846960AaFA2c164605Aebb8e9Ac338f9a0')
    const riskParameter = await ethMarket.riskParameter()

    await increaseTo(VAA_PUBLISH_TIME)

    await pythFactory.commit([oracleIDs[0].id], VAA_PUBLISH_TIME - 4, ETH_VAA_UPDATE, { value: 1 })
    await ethMarket
      .connect(timelockSigner)
      .updateRiskParameter({ ...riskParameter, minMargin: 50e6, minMaintenance: 50e6 })

    await ethMarket.connect(liquidator).update(perennialUser.address, 0, 0, 0, 0, true)

    // Next version according to granularity
    const nextVersion = Math.ceil(VAA_PUBLISH_TIME / 10) * 10
    await pythFactory.commit([oracleIDs[0].id], nextVersion, ETH_VAA_FULFILL, { value: 1 })

    await ethMarket.connect(liquidator).update(liquidator.address, 0, 0, 0, 0, false)
    await ethMarket.connect(liquidator).update(perennialUser.address, 0, 0, 0, 0, false)

    expect((await ethMarket.locals(liquidator.address)).collateral).to.equal(5e6)
  })

  it('settles vaults', async () => {
    const perennialUser = await impersonateWithBalance(
      '0xeb04ee956b3aa60977542e084e38c60be7fd69a5',
      ethers.utils.parseEther('10'),
    )

    await increaseTo(VAA_PUBLISH_TIME)

    const ethMarket = await ethers.getContractAt('IMarket', '0x90A664846960AaFA2c164605Aebb8e9Ac338f9a0')
    const btcMarket = await ethers.getContractAt('IMarket', '0xcC83e3cDA48547e3c250a88C8D5E97089Fd28F60')
    const linkMarket = await ethers.getContractAt('IMarket', '0xD9c296A7Bee1c201B9f3531c7AC9c9310ef3b738')

    await pythFactory.commit([oracleIDs[0].id], VAA_PUBLISH_TIME - 4, ETH_VAA_UPDATE, { value: 1 })
    await pythFactory.commit([oracleIDs[1].id], VAA_PUBLISH_TIME - 4, BTC_VAA_UPDATE, { value: 1 })
    await pythFactory.commit([oracleIDs[6].id], VAA_PUBLISH_TIME - 4, LINK_VAA_UPDATE, { value: 1 })

    const asterVault = await ethers.getContractAt('IVault', (await get('AsterVault')).address)

    await expect(asterVault.connect(perennialUser).update(perennialUser.address, 0, 10e6, 0))
      .to.emit(ethMarket, 'Updated')
      .to.emit(btcMarket, 'Updated')
      .to.emit(linkMarket, 'Updated')

    // Next version according to granularity
    const nextVersion = Math.ceil(VAA_PUBLISH_TIME / 10) * 10
    await expect(pythFactory.commit([oracleIDs[0].id], nextVersion, ETH_VAA_FULFILL, { value: 1 })).to.not.be.reverted
    await expect(pythFactory.commit([oracleIDs[1].id], nextVersion, BTC_VAA_FULFILL, { value: 1 })).to.not.be.reverted
    await expect(pythFactory.commit([oracleIDs[6].id], nextVersion, LINK_VAA_FULFILL, { value: 1 })).to.not.be.reverted
  })
})

const VAA_PUBLISH_TIME = 1714608994

const ETH_VAA_UPDATE =
  '0x504e41550100000003b801000000040d0074e62430d06074c65d4e9c92993046ab119d58cc6ce91944e8e7124e1b7428254212a75158e824cde057e97bed63dd1453c512282d657b7296f9a3ad56b3e67f0002630e76d31a253253303e298b90065606bd463f0f0f6d82a5a436bf2863ac2cbc3f97b37448e3d5ca46d90c5db5a102e8664e91f7f81444d98ec38ee8916922ff0003484e580124286b2502844fb2f5d0cb6c253e05bcb7c106976204c9e06cb65dec43ea21bf1f052011b4c176d92caa24b7c02a20881c66f68ee329382b9aa5d1d00006168822faf8e259c6589e25340e59ee43dd1ca06c82a60b5c47ffb3280689e78221fcec1bc124e89b3109c30c78047cc6b813f0edaec42924b35ff2f76fb6d883010714e119a64c466e3dc198668db37118d10313ce7e62591ed830e3eb1002312e302424f4eebb083d482e425b96e3cb7cf4d9b5d8a32b2a89ce857ca520331adb34010858c876394f5161137bd76603b8a9def9295f80306bf925bcb2916f5a085dbbcf373100253ead77f4e093fce57c8e93c0d8d05c00a7e3df90e3d233a0c39ef4b9000abc0e1d5642c573a194fef625261c36592806ab1776476211efd4fd0b721749833f4810482bfbead405fb3565c6f5faa62717026cf20f1d94fe208024d1394246000bd47e0b6997c176bfa13e949f959dc6e126a60187c74790599ab1cb8b2b5c836c6c2e5e7fce47d356f46eab0497819c3deff4fbb3d1f61caacc205a1956f0e2dc010c350e3850ca77fbe94e50e106f6fe1a8c5e5ff949590a2aafd48e876f9b9c157425a79a8ab29fa497de4b5573554799d356a363c7a60cefad6c4db66957ddda91000d1bb19e42673779759906e671c0fa2d947ca0a0374d3ecf071246a37125835b2d4778feb65bc9662bf81eaabe0b5fcc2582a5be7bb157db7fd0ea5d7cae0d8599010e8ba7b5eb6cd8e0d482317ef34ef3a4695014ad1b63695976cde639328b6e3ac57b9e5aadcd4f6cf340ce14a2b99c16c7cad1bf503d73e47637f4cfff4614a032000f1a3e8bd293e4450fb9fb3549a148b621cbca1a483e6ec015de212d384035832f1dee34825bfbb81abdffe43fa58f5b93c5d1faa19fe7b94b6ed94c47ffc05a420112d22fd6a7ab17664623b842f3e102a030fe7995578cd140a00959f84e6cfe5e2c16716e66c5614c3c99ef9221a1f757cd5926ae10f75fffe3c7765e5c18c743e4016632db6300000000001ae101faedac5851e32b9b23b5f9411a8c2bac4aae3ed4dd7b811dd1a72ea4aa710000000003384da70141555756000000000008424a3000002710225682d9e1716a787972df8a5ed5f40d7171820f01005500ff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace0000004520b56048000000001718c3f8fffffff8000000006632db62000000006632db610000004516850600000000001565e04a0a6c306f9d6109473e5a55639dad6042a0b5b815ebf688f81c1e74225ffa95aa75211b6e6aa2f56c390aa09caa35e196230985e5c2b31753c645dc45fd2bff8481f9c5756dedf484cef06ccd26a5d94c8d571833fc605e2f3342e7b8637c836edd27acce413995e7967054c47600dae462896d63c185790331dcebd78b0ad194393c7e9a5d14e78bb100814b4018f8702f0b55c158e5409b6c67c9e370b22739de4ebaf38a21f3c4fa830bc705308b0282b2670b278b5deb1caaaeb64304ade6b11a7208faa66fa80a'

const BTC_VAA_UPDATE =
  '0x504e41550100000003b801000000040d0074e62430d06074c65d4e9c92993046ab119d58cc6ce91944e8e7124e1b7428254212a75158e824cde057e97bed63dd1453c512282d657b7296f9a3ad56b3e67f0002630e76d31a253253303e298b90065606bd463f0f0f6d82a5a436bf2863ac2cbc3f97b37448e3d5ca46d90c5db5a102e8664e91f7f81444d98ec38ee8916922ff0003484e580124286b2502844fb2f5d0cb6c253e05bcb7c106976204c9e06cb65dec43ea21bf1f052011b4c176d92caa24b7c02a20881c66f68ee329382b9aa5d1d00006168822faf8e259c6589e25340e59ee43dd1ca06c82a60b5c47ffb3280689e78221fcec1bc124e89b3109c30c78047cc6b813f0edaec42924b35ff2f76fb6d883010714e119a64c466e3dc198668db37118d10313ce7e62591ed830e3eb1002312e302424f4eebb083d482e425b96e3cb7cf4d9b5d8a32b2a89ce857ca520331adb34010858c876394f5161137bd76603b8a9def9295f80306bf925bcb2916f5a085dbbcf373100253ead77f4e093fce57c8e93c0d8d05c00a7e3df90e3d233a0c39ef4b9000abc0e1d5642c573a194fef625261c36592806ab1776476211efd4fd0b721749833f4810482bfbead405fb3565c6f5faa62717026cf20f1d94fe208024d1394246000bd47e0b6997c176bfa13e949f959dc6e126a60187c74790599ab1cb8b2b5c836c6c2e5e7fce47d356f46eab0497819c3deff4fbb3d1f61caacc205a1956f0e2dc010c350e3850ca77fbe94e50e106f6fe1a8c5e5ff949590a2aafd48e876f9b9c157425a79a8ab29fa497de4b5573554799d356a363c7a60cefad6c4db66957ddda91000d1bb19e42673779759906e671c0fa2d947ca0a0374d3ecf071246a37125835b2d4778feb65bc9662bf81eaabe0b5fcc2582a5be7bb157db7fd0ea5d7cae0d8599010e8ba7b5eb6cd8e0d482317ef34ef3a4695014ad1b63695976cde639328b6e3ac57b9e5aadcd4f6cf340ce14a2b99c16c7cad1bf503d73e47637f4cfff4614a032000f1a3e8bd293e4450fb9fb3549a148b621cbca1a483e6ec015de212d384035832f1dee34825bfbb81abdffe43fa58f5b93c5d1faa19fe7b94b6ed94c47ffc05a420112d22fd6a7ab17664623b842f3e102a030fe7995578cd140a00959f84e6cfe5e2c16716e66c5614c3c99ef9221a1f757cd5926ae10f75fffe3c7765e5c18c743e4016632db6300000000001ae101faedac5851e32b9b23b5f9411a8c2bac4aae3ed4dd7b811dd1a72ea4aa710000000003384da70141555756000000000008424a3000002710225682d9e1716a787972df8a5ed5f40d7171820f01005500e62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b430000054e2c96299d000000017f0aad63fffffff8000000006632db62000000006632db61000005486b51b0e00000000175b9d4640ade08455573c82944fab6dda95b97b7939f54a775dcad9c325ad37ff27c3bc095e5a718803575b438eb8703017a9a750154b11140f0e6acbb2d9dd4057d2e8cc2fd331a71f590be2ae50747068a331bc03b22379eb064e6e42597b5ba58db9affc2853dec42fd2df9c7ae80e677f400a1e97b2598edae8b0bdcebd78b0ad194393c7e9a5d14e78bb100814b4018f8702f0b55c158e5409b6c67c9e370b22739de4ebaf38a21f3c4fa830bc705308b0282b2670b278b5deb1caaaeb64304ade6b11a7208faa66fa80a'

const LINK_VAA_UPDATE =
  '0x504e41550100000003b801000000040d0074e62430d06074c65d4e9c92993046ab119d58cc6ce91944e8e7124e1b7428254212a75158e824cde057e97bed63dd1453c512282d657b7296f9a3ad56b3e67f0002630e76d31a253253303e298b90065606bd463f0f0f6d82a5a436bf2863ac2cbc3f97b37448e3d5ca46d90c5db5a102e8664e91f7f81444d98ec38ee8916922ff0003484e580124286b2502844fb2f5d0cb6c253e05bcb7c106976204c9e06cb65dec43ea21bf1f052011b4c176d92caa24b7c02a20881c66f68ee329382b9aa5d1d00006168822faf8e259c6589e25340e59ee43dd1ca06c82a60b5c47ffb3280689e78221fcec1bc124e89b3109c30c78047cc6b813f0edaec42924b35ff2f76fb6d883010714e119a64c466e3dc198668db37118d10313ce7e62591ed830e3eb1002312e302424f4eebb083d482e425b96e3cb7cf4d9b5d8a32b2a89ce857ca520331adb34010858c876394f5161137bd76603b8a9def9295f80306bf925bcb2916f5a085dbbcf373100253ead77f4e093fce57c8e93c0d8d05c00a7e3df90e3d233a0c39ef4b9000abc0e1d5642c573a194fef625261c36592806ab1776476211efd4fd0b721749833f4810482bfbead405fb3565c6f5faa62717026cf20f1d94fe208024d1394246000bd47e0b6997c176bfa13e949f959dc6e126a60187c74790599ab1cb8b2b5c836c6c2e5e7fce47d356f46eab0497819c3deff4fbb3d1f61caacc205a1956f0e2dc010c350e3850ca77fbe94e50e106f6fe1a8c5e5ff949590a2aafd48e876f9b9c157425a79a8ab29fa497de4b5573554799d356a363c7a60cefad6c4db66957ddda91000d1bb19e42673779759906e671c0fa2d947ca0a0374d3ecf071246a37125835b2d4778feb65bc9662bf81eaabe0b5fcc2582a5be7bb157db7fd0ea5d7cae0d8599010e8ba7b5eb6cd8e0d482317ef34ef3a4695014ad1b63695976cde639328b6e3ac57b9e5aadcd4f6cf340ce14a2b99c16c7cad1bf503d73e47637f4cfff4614a032000f1a3e8bd293e4450fb9fb3549a148b621cbca1a483e6ec015de212d384035832f1dee34825bfbb81abdffe43fa58f5b93c5d1faa19fe7b94b6ed94c47ffc05a420112d22fd6a7ab17664623b842f3e102a030fe7995578cd140a00959f84e6cfe5e2c16716e66c5614c3c99ef9221a1f757cd5926ae10f75fffe3c7765e5c18c743e4016632db6300000000001ae101faedac5851e32b9b23b5f9411a8c2bac4aae3ed4dd7b811dd1a72ea4aa710000000003384da70141555756000000000008424a3000002710225682d9e1716a787972df8a5ed5f40d7171820f010055008ac0c70fff57e9aefdf5edf44b51d62c2d433653cbb2cf5cc06bb115af04d221000000004f024393000000000019e868fffffff8000000006632db62000000006632db61000000004f28a27200000000001820ee0a59fc16b2ac2d0f985149f20504370b90846ae0dd3ddaa19be1d6f8f91dc1448df532505995d6943ffe68830317a50d238735fd6c94dfffba497b17dc2f7d37ff9b8a1bf3364a4bd86ab36793b8c81428796ec95527daed8aff2727ac0d886a33ddcfffaa6ec73db7c8d8fbc53695ac309be5d955d2f263ddcee52d61fe51f3e7e93d67894c8930085649d547c591035fc124990c11cb66b9f7e81002a8125a554ebaf38a21f3c4fa830bc705308b0282b2670b278b5deb1caaaeb64304ade6b11a7208faa66fa80a'

// Publish Time: 1714609000
const ETH_VAA_FULFILL =
  '0x504e41550100000003b801000000040d00eb5c0f5d86d59fe78c4d7dfa3f45c50d4527be787e660f303801cce27886e5f83b51e7bca4007ecfe86727fab5d85c3ff5110c923451f8a48b5edc9ed0a3a4210102850b629b34df514a7440c155f46b53fdc4da742685b834484406e6af689dd70c3e67081f318ddb8ceb5dc92e5f6421d257864861158dc80863dedd7d36dafc8c010314d334cb4039177d90441aad7fea3dda262359e737cf9d9626934235b7dac2d677442fd0a6262be061b596c26763d017b92d9f8ad77ee2ca357d857a43be5e660006dff4d96ee3fcbeb80bea9891459f73cdbdd93a98ab0056127c20c6bc5be1f74e4ff84831196008d5cd22f1c33d4027bc76450635fa66edd7f48c0c68d057020c01078a49b468915385b17800380fdc6d667298d6126671da9433bbb365ac71e34d3d03f4e0dcbc93923d6656f69274343ff0e2d03c91726155303cbfd72e13421e290108d2953a059f658fc4375b1a0b0e7a536fb96f66e2786eec72c4f5ceb637e4d3be4e67616a8a8166b8a4beb68533d1c94ca197db6a92a5ce7b8f2b67ad1bf398bc000aded20af0b809775e94da9d18a1afdf29d9a5581b1e0e5aa595f9b05a6a9338064e3f04ea8fcf119fea2badb0e4a7fe344eec4ae308c421993f57e1d0a6b2849d010b2fb0c36194176768c7e57e888bf60ca4edbc72ee05482366afa718a45ffff40d74b7b2385199d117644a5e6c31de7633208a6cbf1a9b818997bae5e3495e8cfc010c24f334bdc25b42573f979f21edd750abe9681be2175299cd8bc7931cfcf6673b7aa7251f3ad28f336016a62bff3d527aea7aa5cb62d109a2bf32cb13e0acfa62000d5e84a0ceaa7c94ee0d67d6f9bf28267c1849db8772581c0aba3f24af7b1534384b147b9e0c7a631aa186b1de660aa9e603b238ae6495ba68c973417c570ec2b5010e9c490051a58446f01d20c3ca0b4e3d42ade3a3c28a53881209c14e95b4fab45b7a392899d64cba9457c061a7c47dc60bb06594b9822afa622bf51ca3243a201d000ff34384d16321878226f96cbcb5536a3dd85ebe6e920974b4200afb5378a13ec91c202ea1272e2ae51477d1abee6920b06d3712f01c83446c7884c83ddc0bade201127a29a3698cc12da918966b3e4a472842b9b75ab84e6f173a082ba51794b73e963a605c58d57531c8505be2be042083fcd0b798cb6f5a38e2a804a23d7a5208eb006632db6d00000000001ae101faedac5851e32b9b23b5f9411a8c2bac4aae3ed4dd7b811dd1a72ea4aa710000000003384dbf0141555756000000000008424a4800002710c35bde3bf73b57ff836c82f89fabdd32e1d8dcca01005500ff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace00000045258585bf00000000181ffb01fffffff8000000006632db6c000000006632db6b00000045168e06b0000000001566fef80af50f8dda52e3bbbd22d9534e33610e5478dfb4b061d122e215bf28bc68413a75466ed237d730a1431b445ab1ca1e94cbbc0d6fedcb4ce746ee5f9eb9750b7a6212893579f592f37309f7440690138be737f97136001249f8ae3da7503bb39e506292a70eb5c4f85076e8ff2ba79d7c6857fd0e22e9eb307fd31e4f13bbb66fc8adbb4e1ed7d5b21e2d82d8662bad4795a7577c88e01356dd04f67226ff969d78dda8b9dbd44279276fc22583f258d9d211bce821fbc210e79da442a3517bde1e5cdd17b7451e7080'

const BTC_VAA_FULFILL =
  '0x504e41550100000003b801000000040d00eb5c0f5d86d59fe78c4d7dfa3f45c50d4527be787e660f303801cce27886e5f83b51e7bca4007ecfe86727fab5d85c3ff5110c923451f8a48b5edc9ed0a3a4210102850b629b34df514a7440c155f46b53fdc4da742685b834484406e6af689dd70c3e67081f318ddb8ceb5dc92e5f6421d257864861158dc80863dedd7d36dafc8c010314d334cb4039177d90441aad7fea3dda262359e737cf9d9626934235b7dac2d677442fd0a6262be061b596c26763d017b92d9f8ad77ee2ca357d857a43be5e660006dff4d96ee3fcbeb80bea9891459f73cdbdd93a98ab0056127c20c6bc5be1f74e4ff84831196008d5cd22f1c33d4027bc76450635fa66edd7f48c0c68d057020c01078a49b468915385b17800380fdc6d667298d6126671da9433bbb365ac71e34d3d03f4e0dcbc93923d6656f69274343ff0e2d03c91726155303cbfd72e13421e290108d2953a059f658fc4375b1a0b0e7a536fb96f66e2786eec72c4f5ceb637e4d3be4e67616a8a8166b8a4beb68533d1c94ca197db6a92a5ce7b8f2b67ad1bf398bc000aded20af0b809775e94da9d18a1afdf29d9a5581b1e0e5aa595f9b05a6a9338064e3f04ea8fcf119fea2badb0e4a7fe344eec4ae308c421993f57e1d0a6b2849d010b2fb0c36194176768c7e57e888bf60ca4edbc72ee05482366afa718a45ffff40d74b7b2385199d117644a5e6c31de7633208a6cbf1a9b818997bae5e3495e8cfc010c24f334bdc25b42573f979f21edd750abe9681be2175299cd8bc7931cfcf6673b7aa7251f3ad28f336016a62bff3d527aea7aa5cb62d109a2bf32cb13e0acfa62000d5e84a0ceaa7c94ee0d67d6f9bf28267c1849db8772581c0aba3f24af7b1534384b147b9e0c7a631aa186b1de660aa9e603b238ae6495ba68c973417c570ec2b5010e9c490051a58446f01d20c3ca0b4e3d42ade3a3c28a53881209c14e95b4fab45b7a392899d64cba9457c061a7c47dc60bb06594b9822afa622bf51ca3243a201d000ff34384d16321878226f96cbcb5536a3dd85ebe6e920974b4200afb5378a13ec91c202ea1272e2ae51477d1abee6920b06d3712f01c83446c7884c83ddc0bade201127a29a3698cc12da918966b3e4a472842b9b75ab84e6f173a082ba51794b73e963a605c58d57531c8505be2be042083fcd0b798cb6f5a38e2a804a23d7a5208eb006632db6d00000000001ae101faedac5851e32b9b23b5f9411a8c2bac4aae3ed4dd7b811dd1a72ea4aa710000000003384dbf0141555756000000000008424a4800002710c35bde3bf73b57ff836c82f89fabdd32e1d8dcca01005500e62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b430000054f033b50f900000001462843a6fffffff8000000006632db6c000000006632db6b00000548700bb6800000000175b1adac0ade08455573c82944fab6dda95b97b7939f54a77552245d8281e02041471f28b971a3d559e692c5751f4319e3df80799d3ef7be1f7ac29fb4629a8f56d848acf1997dfe6162678fba0e8dbedece88e98b872f325545a2c8352d8ea811f141c6292a8740312333c1a6572a30947d745f219dbe53a41c56d922d31e4f13bbb66fc8adbb4e1ed7d5b21e2d82d8662bad4795a7577c88e01356dd04f67226ff969d78dda8b9dbd44279276fc22583f258d9d211bce821fbc210e79da442a3517bde1e5cdd17b7451e7080'

const LINK_VAA_FULFILL =
  '0x504e41550100000003b801000000040d00eb5c0f5d86d59fe78c4d7dfa3f45c50d4527be787e660f303801cce27886e5f83b51e7bca4007ecfe86727fab5d85c3ff5110c923451f8a48b5edc9ed0a3a4210102850b629b34df514a7440c155f46b53fdc4da742685b834484406e6af689dd70c3e67081f318ddb8ceb5dc92e5f6421d257864861158dc80863dedd7d36dafc8c010314d334cb4039177d90441aad7fea3dda262359e737cf9d9626934235b7dac2d677442fd0a6262be061b596c26763d017b92d9f8ad77ee2ca357d857a43be5e660006dff4d96ee3fcbeb80bea9891459f73cdbdd93a98ab0056127c20c6bc5be1f74e4ff84831196008d5cd22f1c33d4027bc76450635fa66edd7f48c0c68d057020c01078a49b468915385b17800380fdc6d667298d6126671da9433bbb365ac71e34d3d03f4e0dcbc93923d6656f69274343ff0e2d03c91726155303cbfd72e13421e290108d2953a059f658fc4375b1a0b0e7a536fb96f66e2786eec72c4f5ceb637e4d3be4e67616a8a8166b8a4beb68533d1c94ca197db6a92a5ce7b8f2b67ad1bf398bc000aded20af0b809775e94da9d18a1afdf29d9a5581b1e0e5aa595f9b05a6a9338064e3f04ea8fcf119fea2badb0e4a7fe344eec4ae308c421993f57e1d0a6b2849d010b2fb0c36194176768c7e57e888bf60ca4edbc72ee05482366afa718a45ffff40d74b7b2385199d117644a5e6c31de7633208a6cbf1a9b818997bae5e3495e8cfc010c24f334bdc25b42573f979f21edd750abe9681be2175299cd8bc7931cfcf6673b7aa7251f3ad28f336016a62bff3d527aea7aa5cb62d109a2bf32cb13e0acfa62000d5e84a0ceaa7c94ee0d67d6f9bf28267c1849db8772581c0aba3f24af7b1534384b147b9e0c7a631aa186b1de660aa9e603b238ae6495ba68c973417c570ec2b5010e9c490051a58446f01d20c3ca0b4e3d42ade3a3c28a53881209c14e95b4fab45b7a392899d64cba9457c061a7c47dc60bb06594b9822afa622bf51ca3243a201d000ff34384d16321878226f96cbcb5536a3dd85ebe6e920974b4200afb5378a13ec91c202ea1272e2ae51477d1abee6920b06d3712f01c83446c7884c83ddc0bade201127a29a3698cc12da918966b3e4a472842b9b75ab84e6f173a082ba51794b73e963a605c58d57531c8505be2be042083fcd0b798cb6f5a38e2a804a23d7a5208eb006632db6d00000000001ae101faedac5851e32b9b23b5f9411a8c2bac4aae3ed4dd7b811dd1a72ea4aa710000000003384dbf0141555756000000000008424a4800002710c35bde3bf73b57ff836c82f89fabdd32e1d8dcca010055008ac0c70fff57e9aefdf5edf44b51d62c2d433653cbb2cf5cc06bb115af04d221000000004f09278000000000001613f6fffffff8000000006632db6c000000006632db6b000000004f288b4800000000001820cd0a8aeac5f74936ba0c546fd8d76a7b916758133f8667b249cc795cd9cd4ec64284615748d7aede5d3ff7e22a64fc9e530c87a4e45246db76be1cbfe973e7dcc803d940b23af1c36afa4e8400d47c24857c6b6c692558d3db9de8166f44e310df3d25741e67ec031353464d086f6929e96aa6addb54c33cfa45d9b3467261fcc708c0bcbfbe2a94b9e6ad1bdcc5fd87ac78738219cc1ee5d93841fd3c1068647747dda8b9dbd44279276fc22583f258d9d211bce821fbc210e79da442a3517bde1e5cdd17b7451e7080'
